{
  "patterns": [
    {
      "name": "equalsdividers",
      "match": "(===+)",
      "captures": {
        "0": {
          "name": "string.future_pink"
        }
      }
    },
    {
      "name": "each check",
      "match": ".*\\s(check)",
      "captures": {
        "0": {
          "name": "string.header2"
        }
      }
    },
    {
      "name": "keyname",
      "match": "^(?!(Error:)|(Config for instance ID:))(.*?):\\s",
      "captures": {
        "0": {
          "name": "string.cyan"
        }
      }
    },
    {
      "name": "keyname",
      "match": "(.*instance ID?):(.*?):(.*)",
      "captures": {
        "1": {
          "name": "string.cyan"
        },
        "2": {
          "name": "string.os_orange"
        },
        "0": {
          "name": "string.timestamp_yellow"
        }
      }
    },
    {
      "name": "tag keyname",
      "match": "(^-.*):(.*)",
      "captures": {
        "1": {
          "name": "string.cyan"
        }
      }
    },
    {
      "name": "tag keyname2",
      "match": "(^-.*)==(.*)",
      "captures": {
        "1": {
          "name": "string.cyan"
        }
      }
    },
    {
      "name": "section break",
      "match": "^~$",
      "captures": {
        "0": {
          "name": "string.error_red"
        }
      }
    },
    {
      "name": "AD IDs",
      "match": "\\*\\s_(.*)",
      "captures": {
        "1": {
          "name": "string.os_orange"
        }
      }
    }
  ],
  "repository": {},
  "fileTypes": [
    "log"
  ],
  "name": "configcheck Log",
  "scopeName": "link.configcheck"
}

