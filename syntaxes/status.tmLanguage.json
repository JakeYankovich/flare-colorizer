{
  "patterns": [
    {
      "name": "agentversion",
      "match": "(Agent) \\((v\\d+\\.\\d+(?:\\.\\d+)?)\\)",
      "captures": {
        "0": {
          "name": "string.future_pink"
        },
        "1": {
          "name": "string.future_pink"
        },
        "2": {
          "name": "string.version_red"
        }
      }
    },
    {
      "name": "header1",
      "match": "^Transport\\sProxy\\sWarnings|Autodiscovery|^Datadog\\sCluster\\sAgent|Collector$|JMXFetch$|JMX\\sFetch$|Forwarder|^Endpoints|APM\\sAgent|Logs\\sAgent$|Aggregator|Process\\sAgent|DogStatsD|OTLP|Remote\\sConfiguration$|System\\sProbe",
      "captures": {
        "0": {
          "name": "string.header1"
        }
      }
    },
    {
      "name": "evilheader1",
      "match": "Config\\sErrors|Loading\\sErrors|(\\[ERROR\\])|\\sError\\s|ERROR|Error:",
      "captures": {
        "0": {
          "name": "string.evilheader1"
        }
      }
    },
    {
      "name": "num errors:",
      "match": "^.*Errors:\\s([1-9]{1,5})",
      "captures": {
        "0": {
          "name": "string.evilheader1"
        }
      }
    },
    {
      "name": "header2",
      "match": "Host\\sInfo|Metadata$|Hostnames$|Hostname|OTel\\smetadata|Running\\sChecks|API\\sKeys\\sstatus|Paths|Clocks|Process\\sEndpoints|Integrations$|Tailers|Process\\sComponent$|Extractors$",
      "captures": {
        "0": {
          "name": "string.header2"
        }
      }
    },
    {
      "name": "OK",
      "match": "\\[OK\\]",
      "captures": {
        "0": {
          "name": "string.green"
        }
      }
    },
    {
      "name": "hyphendivers",
      "match": "--+",
      "captures": {
        "0": {
          "name": "string.green"
        }
      }
    },
    {
      "name": "equalsdividers",
      "match": "(==+)",
      "captures": {
        "0": {
          "name": "string.future_pink"
        }
      }
    },
    {
      "name": "windows",
      "match": "Windows\\sServer\\s[0-9]{4}|\\b(windows|Windows)\\b(?!_)",
      "captures": {
        "0": {
          "name": "string.navyblue"
        }
      }
    },
    {
      "name": "linux",
      "match": "linux|Linux|ubuntu|debian|rhel",
      "captures": {
        "0": {
          "name": "string.os_orange"
        }
      }
    },
    {
      "name": "keyname",
      "match": "^(?!Error:)\\s(.*?):\\s",
      "captures": {
        "1": {
          "name": "string.cyan"
        }
      }
    },
    {
      "name": "timestamp",
      "match": "[0-9]{11,13}",
      "captures": {
        "0": {
          "name": "string.timestamp_yellow"
        }
      }
    }
  ],
  "repository": {},
  "fileTypes": [
    "log"
  ],
  "name": "Status Log",
  "scopeName": "link.status"
}